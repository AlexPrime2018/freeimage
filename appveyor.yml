version: 3.16.1.{build}
shallow_clone: true


environment:
  pack_dlls: 1      # will fetch upx
  
  matrix:
    - build_platform: "x86"
      build_compiler: "msvc"
    
    - build_platform: "x64"
      build_compiler: "msvc"



install:
  - ps: if($env:build_platform -eq 'x64') {
          $env:vcvar_arg = 'x86_amd64';
        }
        else {
          $env:vcvar_arg = 'x86';
        }
  
  
  # get common functions
  - git clone https://github.com/imazen/gd-appveyor-helpers
  - ps: . .\gd-appveyor-helpers\appveyor_funcs.ps1
  
  
  # get upx (cinst broken; gets dos ver)
  #- if [%pack_dlls%]==[1] cinst upx
  - if [%pack_dlls%]==[1] (
      curl -L -o upx.zip http://upx.sourceforge.net/download/upx391w.zip &&
      7z e upx.zip *.exe -r )



build_script:
  
  # set env
  
  - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall" %vcvar_arg%'
  
  
  # build msvc
  
  - SET zip=freeimage-msvc12-%build_platform%.zip
  - SET zipNet=FreeImageNET-%build_platform%.zip
  - if [%build_compiler%]==[msvc] (
      msbuild FreeImage.2013.sln /p:Configuration=Release /v:m &&
      if [%pack_dlls%]==[1] ( upx Dist\FreeImage.dll ) &&
      cd TestAPI &&
      msbuild Test.2013.sln /p:Configuration=Release /v:m &&
      copy Release\Test.exe . &&
      copy ..\Dist\FreeImage.dll . &&
      Test &&
      cd .. &&
      cd Wrapper\FreeImage.NET\cs\Library &&
      msbuild Library.csproj /p:Configuration=Release /v:m &&
      cd ..\..\..\.. )
  
  - ps: if($env:build_compiler -eq 'msvc') {
      invoke '7z' "a $($env:zip) .\Dist\FreeImage.dll .\Dist\FreeImage.h .\Dist\FreeImage.lib";
      Push-AppveyorArtifact $env:zip;
      invoke '7z' "a $($env:zipNet) .\Dist\FreeImage.dll .\Wrapper\FreeImage.NET\cs\Library\bin\Release\FreeImageNET.dll .\Wrapper\FreeImage.NET\cs\Library\bin\Release\FreeImageNET.XML";
      Push-AppveyorArtifact $env:zipNet; }

