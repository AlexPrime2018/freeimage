version: 3.16.1.{build}
shallow_clone: true


environment:
  pack_dlls:   1    # will fetch upx
  
  matrix:
    - tbs_arch: "x86"
      tbs_tools: "msvc12"
      tbs_static_runtime: 0
    
    - tbs_arch: "x64"
      tbs_tools: "msvc12"
      tbs_static_runtime: 0
    
    #- tbs_arch: "x86"
    #  tbs_tools: "mingw"
    #  tbs_static_runtime: 1
    
    #- tbs_arch: "x64"
    #  tbs_tools: "mingw"
    #  tbs_static_runtime: 1



install:
  - ps: if($env:build_platform -eq 'x64') {
          $env:vcvar_arg = 'x86_amd64';
        }
        else {
          $env:vcvar_arg = 'x86';
        }
  
  
  # get common functions
  - git clone https://github.com/imazen/gd-appveyor-helpers
  - ps: . .\gd-appveyor-helpers\appveyor_funcs.ps1
  
  # fetch prebuilt deps
  #- ps: invoke 'nuget' "install libjpeg-$($env:build_compiler)-$($env:build_platform)-master -Source https://ci.appveyor.com/nuget/libjpeg-turbo-t70qw53csfhj"
  #- mkdir deps
  #- ps: move libjpeg*\jpeg_static.lib deps\jpeg.lib
  #- ps: move libjpeg*\*.h Source\LibJPEG -force
  
  # get upx (cinst broken; gets dos ver)
  #- if [%pack_dlls%]==[1] cinst upx
  - if [%pack_dlls%]==[1] (
      curl -L -o upx.zip http://upx.sourceforge.net/download/upx391w.zip &&
      7z e upx.zip *.exe -r )
  
  - curl -L -o utd.zip https://s3.amazonaws.com/public-unit-test-resources/FreeImage.NET/UnitTestData.zip
  - 7z x utd.zip -oWrapper\FreeImage.NET\cs



build_script:
  - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall" %vcvar_arg%'
  
  - SET zip=freeimage-%tbs_tools%-%tbs_arch%.zip
  - SET zipNet=FreeImageNET-tbs_arch%.zip
  
  - thumbs make
  - for /f "tokens=*" %%i in ('thumbs list') do set files=%%i
  - 7z a %zip% %files%
  - appveyor PushArtifact %zip%
  
  #- if [%build_compiler%]==[msvc] (
  #    msbuild FreeImage.2013.sln /p:Configuration=Release /v:m &&
  #    (if [%pack_dlls%]==[1] upx Dist\FreeImage.dll ) &&
  #    cd TestAPI &&
  #    msbuild Test.2013.sln /p:Configuration=Release /v:m &&
  #    cd .. &&
  #    cd Wrapper\FreeImage.NET\cs\Library &&
  #    msbuild Library.csproj /p:Configuration=Release /v:m &&
  #    cd ..\..\..\.. &&
  #    cd Wrapper\FreeImage.NET\cs\UnitTest &&
  #    msbuild UnitTest.csproj /p:Configuration=Release /v:m &&
  #    cd ..\..\..\.. &&
  #    copy Dist\FreeImage.lib Wrapper\FreeImage.NET\cpp\FreeImageIO &&
  #    copy Dist\FreeImage.h Wrapper\FreeImage.NET\cpp\FreeImageIO &&
  #    cd Wrapper\FreeImage.NET\cpp\FreeImageIO &&
  #    msbuild FreeImageIO.sln /p:Configuration=Release /v:m &&
  #    cd ..\..\..\.. )
  
  #- ps: if($env:tbs_tools -eq 'msvc12') {
  #    invoke '7z' "a $($env:zipNet)
  #      .\Dist\FreeImage.dll
  #      .\Wrapper\FreeImage.NET\cs\Library\bin\Release\FreeImageNET.dll
  #      .\Wrapper\FreeImage.NET\cs\Library\bin\Release\FreeImageNET.XML
  #      .\Wrapper\FreeImage.NET\cpp\FreeImageIO\$($env:bin_subdir)\Release\FreeImageIO.Net.dll";
  #    Push-AppveyorArtifact $env:zipNet; }



test_script:
  
  #cd TestAPI &&
  #    copy Release\Test.exe . &&
  #    copy ..\Dist\FreeImage.dll . &&
  #    Test &&
  #    cd .. &&
  
  #- if [%tbs_tools%]==[msvc12] (
  #    copy Dist\FreeImage.dll Wrapper\FreeImage.NET\cs\UnitTest\bin\Release &&
  #    (if [%tbs_arch%]==[x86] (nunit-console-x86 Wrapper\FreeImage.NET\cs\UnitTest\bin\Release\UnitTest.exe)
  #    else if [%tbs_arch%]==[x64] (nunit-console Wrapper\FreeImage.NET\cs\UnitTest\bin\Release\UnitTest.exe)) &&
  #    appveyor PushArtifact TestResult.xml
  #  )
